plugins {
    id 'application'
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
}

application {
    mainClassName = "com.github.otr.console_client.presentation.activity.MainActivityKt"
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.otr.console_client.presentation.activity.MainActivityKt'
    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}


java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
    maven { url "https://mvn.mchv.eu/repository/mchv/" }
}

dependencies {

    // TD Light Java
    implementation(platform("it.tdlight:tdlight-java-bom:2.8.10.6"))
    // implementation("it.tdlight:tdlight-java")
    implementation("it.tdlight:tdlight-java-8")
    implementation("it.tdlight:tdlight-natives-windows-amd64")

    // SLF4J API
    implementation("org.slf4j:slf4j-api:2.0.7")

    // Logback Classic as logging implementation
    implementation("ch.qos.logback:logback-classic:1.3.6")

    // To use Kotlin's coroutine Flow
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")

    // JUnit 4
    testImplementation("junit:junit:4.13.2")

    // Coroutine testing API ( to use `runTest {}` method)
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")

}
