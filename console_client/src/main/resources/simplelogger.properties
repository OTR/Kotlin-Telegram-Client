# In addition to looking for system properties with the names specified below,
# this implementation also checks for a class loader resource named "simplelogger.properties",
# and includes any matching definitions from this resource (if it exists).
# https://www.slf4j.org/api/org/slf4j/simple/SimpleLogger.html
# The following system properties are supported to configure the behavior of this logger:

# Specify a path to a file as an output target for logging.
# Could be the path to a file, or the special values "System.out" and "System.err".
# Default is "System.err".
# Could be either an absolute path or a relative path to the working directory of the application.
# If you specify a relative path, the starting point is the working directory of the application,
# which can be obtained using the user.dir system property.
# In IntelliJ IDEA or Android Studio:
#     Right Click on a file > Copy Path/Reference > Path From Repository Root
# FIXME: The current SLF4J configuration will output ALL THE Logger instances to the given file
#        but they should be guided depend on the logger's name
#
org.slf4j.simpleLogger.logFile=console_client/src/main/resources/tdlib/log/simple_telegram_client.log

# Set to true if you want the current date and time to be included in output messages.
# Default is false
org.slf4j.simpleLogger.showDateTime=true

# The date and time format to be used in the output messages.
# The pattern describing the date and time format is defined by SimpleDateFormat.
# https://docs.oracle.com/javase/1.5.0/docs/api/java/text/SimpleDateFormat.html
# If the format is not specified or is invalid,
# the number of milliseconds since start up will be output.
org.slf4j.simpleLogger.dateTimeFormat=[HH:mm:ss]

#
org.slf4j.simpleLogger.showShortLogName=false

# TODO: Explicitly specify the line separator used by SimpleLogger when writing logs to a file.
# The default value for this property is the platform-specific line separator,
# which is usually either \n (Unix-like systems) or \r\n (Windows).
# Maybe you can specify the property value as a JVM Option in your Run Configuration:
#    -Dline.separator='\n'
#
# Or in gradle.properties file as:
# org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 -Dline.separator='\n'
#
