<configuration>
    <variable name="BASE_LOG_DIR" value="console_client/src/main/resources/tdlib/log"/>
<!-- ___________________________________________________________________________________________ -->
    <conversionRule
        conversionWord="shortLoggerName"
        converterClass="com.github.otr.console_client.data.log_handler.ShortLoggerNameConverter"
    />
    <conversionRule
        conversionWord="shutDown"
        converterClass="com.github.otr.console_client.data.log_handler.ShutDownMethodConverter"
    />
<!-- ___________________________________________________________________________________________ -->
    <appender name="ROOT_TO_FILE" class="ch.qos.logback.core.FileAppender">
        <file>${BASE_LOG_DIR}/simple_telegram_client.log</file>
        <append>true</append>
<!-- Apply our own Filter. See documentation comments for a class `DenyEventsFromTDLightFilter` -->
        <filter class="com.github.otr.console_client.data.log_handler.DenyEventsFromTDLightFilter" />
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%date{HH:mm:ss}][%-12thread][%-5level][%-14shortLoggerName] - %replace(%msg){'\n', ''}\n%shutDown</pattern>
<!--            To trace logger origin call you could add [class: %class] [method: %method] -->
<!--            Also could be useful [marker: %marker] -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>
<!-- ___________________________________________________________________________________________ -->
    <appender name="COMMON_UPDATES_TO_FILE" class="ch.qos.logback.core.FileAppender">
        <file>${BASE_LOG_DIR}/common_updates.log</file>
        <append>true</append>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%date{HH:mm:ss}][%-5level][%-14logger] - %msg\n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
<!-- ___________________________________________________________________________________________ -->
    <appender name="NEW_MESSAGES_TO_FILE" class="ch.qos.logback.core.FileAppender">
        <file>${BASE_LOG_DIR}/new_messages.log</file>
        <append>true</append>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%date{HH:mm:ss}][%-5level][%-14logger] - %msg\n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
<!-- ___________________________________________________________________________________________ -->
<!-- Log info about unread messages -->
<!-- i.e.: There is a Private chat with Telegram. You have 0 unread messages from them. -->
    <logger name="ChatResultHand" level="DEBUG" additivity="true">
        <appender-ref ref="NEW_MESSAGES_TO_FILE" />
    </logger>
<!-- ___________________________________________________________________________________________ -->
<!-- Log info about the last message in a chat. Usually Telegram server sends you the last message
   for every chat in your Chat List (IE Contact list, Roster) -->
<!-- i.e.: The last message in a chat with id: 777000 has plain text: `Help` -->
    <logger name="LastMessageHan" level="DEBUG" additivity="true">
        <appender-ref ref="NEW_MESSAGES_TO_FILE" />
    </logger>
<!-- ___________________________________________________________________________________________ -->
<!-- Log info about A new message was received; can also be an outgoing message. -->
<!-- i.e.:  Received a new plain text message: `Help` in a chat with id: 777000 -->
    <logger name="NewMessageHand" level="DEBUG" additivity="true">
        <appender-ref ref="NEW_MESSAGES_TO_FILE" />
    </logger>
<!-- ___________________________________________________________________________________________ -->
    <logger name="CommonUpdates" level="DEBUG" additivity="true">
        <appender-ref ref="COMMON_UPDATES_TO_FILE" />
    </logger>
<!-- ___________________________________________________________________________________________ -->
    <root level="debug">
        <appender-ref ref="ROOT_TO_FILE" />
    </root>
</configuration>
